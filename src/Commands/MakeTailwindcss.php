<?php

namespace WallaceMaxters\BlessUi\Commands;

use Illuminate\Support\Str;
use Illuminate\Console\Command;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\File;
use WallaceMaxters\BlessUi\BlessUiServiceProvider;

class MakeTailwindcss extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'bless-ui:make-tailwindcss {name=bless-ui}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Generate a css file for bless-ui config';


    /**
     * Config
     */
    private array $config;

    public function handle()
    {
        $this->config = require __DIR__ . '/../../config/bless-ui.php';

        $css = Str::start($this->argument('name'), '/') . '.css';

        $filename = $this->laravel->resourcePath('css/' . $css);

        $output = implode("\n", [
            "/** Generated by wallacemaxters/bless-ui **/",
            '',
            '@tailwind base;',
            '@tailwind components;',
            '@tailwind utilities;',
            '',
            "@layer components {",
        ]);


        foreach (ListComponents::getComponents() as $item) {

            $component = ListComponents::getComponentNameFromFile($item, namespace: false, ignoreIndex: true);

            $output .= $this->generateCssRule($component);
        }

        $output .= "\n}";

        File::put($filename, $output);

        $this->call('bless-ui:make-config');
    }

    protected function generateCssRule(string $component): string
    {
        $config = $this->config;

        $base = (string) implode(
            ";\n        @apply ", 
            (array) ($config['components'][$component]['base'] ?? null)
        );

        $prefix = $config['prefix'];

        if (empty($base)) return '';

        return (<<<CSS

            .{$prefix}{$component} {
                @apply {$base};
            }

        CSS);
    }
}
